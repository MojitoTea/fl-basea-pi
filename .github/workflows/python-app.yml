
name: workshop

on:
  push:
    branches:
      - main
  workflow_dispatch:

env:
  REGISTRY: mojitotea/flapi

jobs:
  lint:
    runs-on: ubuntu-latest
    name: Lint
    steps:

      - name: Git checkout
        uses: actions/checkout@v3

      - name: Setup Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.9'

      - name: flake8 Lint
        uses: py-actions/flake8@v2

  build_and_push:
    runs-on: ubuntu-latest
    name: Build and push docker image
    needs: lint
    outputs:
      commit_hash: ${{ steps.commit_hash.outputs.commit_hash }}
    steps:

      - name: Git checkout
        uses: actions/checkout@v3

      - id: commit_hash
        run: echo "::set-output name=commit_hash::${GITHUB_SHA::7}"

      - name: Login to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USER }}
          password: ${{ secrets.DOCKERHUB_TOK }}

      - name: Build and push
        uses: docker/build-push-action@v3
        with:
          context: .
          push: true
          tags: |
            ${{ env.REGISTRY }}:${{ steps.commit_hash.outputs.commit_hash }}
            ${{ env.REGISTRY }}:latest
         

  deploy:
    runs-on: ubuntu-latest
    name: Deploy
    needs: build_and_push
    strategy:
      matrix:
        host: [35.158.223.193]
    env:
      USERNAME: ${{ secrets.USER }}
    steps:
      - name: Git Checkout
        uses: actions/checkout@v3
        
      - name: Deploy to EC2 instanse via SSH action
        uses: appleboy/ssh-action@v0.1.3
        env: 
            DOCKER_USERNAME: ${{ secrets.DOCKERHUB_USER }}
            DOCKERHUB_TOKEN: ${{ secrets.DOCKERHUB_TOK }}
        with:
          host: ${{ matrix.host }}
          username: ${{ env.USERNAME }}
          key: ${{ secrets.AWS_SECRET_PASS }}
          envs: DOCKER_USER, DOCKERHUB_TOK
          port: 22
          script: |
          
            cd ${{ secrets.SRC_PATH }}
            
            # login docker
            
            sudo docker login -u $DOCKER_USER -p $DOCKERHUB_TOK
            
            sudo docker-compose stop
            
            sudo docker-compose rm
            
            sudo docker-compose up -d

  check:
        runs-on: ubuntu-latest
        name: Check
        needs: deploy
        strategy:
         matrix:
           host: [35.158.223.193]
        steps:
             - name: Check
               uses: wei/curl@master
               with:
                 args: http://${{ matrix.host }}:5000/api/health-check/ok
